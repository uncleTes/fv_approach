/* Generated by Cython 0.23.4 */

#ifndef __PYX_HAVE__my_class_vtk
#define __PYX_HAVE__my_class_vtk


/* "octant.pyx":28
 *     ctypedef int _N3 "3"
 * 
 * ctypedef public vector[uint8_t] u8vector             # <<<<<<<<<<<<<<
 * ctypedef public vector[uint32_t] u32vector
 * ctypedef public vector[uint64_t] u64vector
 */
typedef std::vector<uint8_t>  u8vector;

/* "octant.pyx":29
 * 
 * ctypedef public vector[uint8_t] u8vector
 * ctypedef public vector[uint32_t] u32vector             # <<<<<<<<<<<<<<
 * ctypedef public vector[uint64_t] u64vector
 * ctypedef public vector[double] dvector
 */
typedef std::vector<uint32_t>  u32vector;

/* "octant.pyx":30
 * ctypedef public vector[uint8_t] u8vector
 * ctypedef public vector[uint32_t] u32vector
 * ctypedef public vector[uint64_t] u64vector             # <<<<<<<<<<<<<<
 * ctypedef public vector[double] dvector
 * ctypedef public array[double, _N3] darray3
 */
typedef std::vector<uint64_t>  u64vector;

/* "octant.pyx":31
 * ctypedef public vector[uint32_t] u32vector
 * ctypedef public vector[uint64_t] u64vector
 * ctypedef public vector[double] dvector             # <<<<<<<<<<<<<<
 * ctypedef public array[double, _N3] darray3
 * ctypedef public array[int8_t, _N3] i8array3
 */
typedef std::vector<double>  dvector;

/* "octant.pyx":32
 * ctypedef public vector[uint64_t] u64vector
 * ctypedef public vector[double] dvector
 * ctypedef public array[double, _N3] darray3             # <<<<<<<<<<<<<<
 * ctypedef public array[int8_t, _N3] i8array3
 * ctypedef public array[uint32_t, _N3] u32array3
 */
typedef std::array<double,3>  darray3;

/* "octant.pyx":33
 * ctypedef public vector[double] dvector
 * ctypedef public array[double, _N3] darray3
 * ctypedef public array[int8_t, _N3] i8array3             # <<<<<<<<<<<<<<
 * ctypedef public array[uint32_t, _N3] u32array3
 * ctypedef public vector[vector[uint32_t]] u32vector2D
 */
typedef std::array<int8_t,3>  i8array3;

/* "octant.pyx":34
 * ctypedef public array[double, _N3] darray3
 * ctypedef public array[int8_t, _N3] i8array3
 * ctypedef public array[uint32_t, _N3] u32array3             # <<<<<<<<<<<<<<
 * ctypedef public vector[vector[uint32_t]] u32vector2D
 * ctypedef public vector[vector[uint64_t]] u64vector2D
 */
typedef std::array<uint32_t,3>  u32array3;

/* "octant.pyx":35
 * ctypedef public array[int8_t, _N3] i8array3
 * ctypedef public array[uint32_t, _N3] u32array3
 * ctypedef public vector[vector[uint32_t]] u32vector2D             # <<<<<<<<<<<<<<
 * ctypedef public vector[vector[uint64_t]] u64vector2D
 * ctypedef public vector[u32array3] u32arr3vector
 */
typedef std::vector<std::vector<uint32_t> >  u32vector2D;

/* "octant.pyx":36
 * ctypedef public array[uint32_t, _N3] u32array3
 * ctypedef public vector[vector[uint32_t]] u32vector2D
 * ctypedef public vector[vector[uint64_t]] u64vector2D             # <<<<<<<<<<<<<<
 * ctypedef public vector[u32array3] u32arr3vector
 * 
 */
typedef std::vector<std::vector<uint64_t> >  u64vector2D;

/* "octant.pyx":37
 * ctypedef public vector[vector[uint32_t]] u32vector2D
 * ctypedef public vector[vector[uint64_t]] u64vector2D
 * ctypedef public vector[u32array3] u32arr3vector             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "Octant.hpp" namespace "bitpit":
 */
typedef std::vector<u32array3>  u32arr3vector;

#ifndef __PYX_HAVE_API__my_class_vtk

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

#endif /* !__PYX_HAVE_API__my_class_vtk */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initmy_class_vtk(void);
#else
PyMODINIT_FUNC PyInit_my_class_vtk(void);
#endif

#endif /* !__PYX_HAVE__my_class_vtk */
